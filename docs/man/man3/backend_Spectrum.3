.TH "backend::Spectrum" 3 "14 Jul 2010" "Version 0.1" "RedHen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
backend::Spectrum \- 
.PP
Store a spectrum and its related data.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fBparse_file\fP"
.br
.RI "\fIParse a string of JCAMP file data and extract all needed data. \fP"
.ti -1c
.RI "def \fBget_field\fP"
.br
.RI "\fIGet a specific data label from the file. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBcontents\fP"
.br
.ti -1c
.RI "\fBtype\fP"
.br
.ti -1c
.RI "\fBxy\fP"
.br
.ti -1c
.RI "\fBdata\fP"
.br
.ti -1c
.RI "\fBchemical_type\fP"
.br
.ti -1c
.RI "\fBchemical_name\fP"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "tuple \fBchemical_name\fP = db.StringProperty()"
.br
.RI "\fIThe chemical name associated with the spectrum. \fP"
.ti -1c
.RI "tuple \fBchemical_type\fP = db.StringProperty()"
.br
.RI "\fIThe chemical type of the substance the spectrum represents. \fP"
.ti -1c
.RI "tuple \fBdata\fP = db.ListProperty(float)"
.br
.RI "\fIA list of integrated X,Y points for the spectrum's graph. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Store a spectrum and its related data. 

Store a spectrum's chemical name, type, and graph data. Also provide functions to make a new \fBSpectrum\fP from a JCAMP file.
.PP
.nf
Store a spectrum, its related data, and any algorithms necessary
to compare the spectrum to the DataStore.
.fi
.PP
 
.PP
Definition at line 79 of file backend.py.
.SH "Member Function Documentation"
.PP 
.SS "def get_field ( self,  name)"
.PP
Get a specific data label from the file. \fBParameters:\fP
.RS 4
\fIname\fP Name of the data label to retrieve 
.RE
.PP
\fBReturns:\fP
.RS 4
Value of the data label
.PP
.nf
Get a specific data label from the file.
.fi
.PP
 
.RE
.PP

.PP
Definition at line 158 of file backend.py.
.SS "def parse_file ( self,  file_obj)"
.PP
Parse a string of JCAMP file data and extract all needed data. Search a JCAMP file for the chemical's name, type, and spectrum data. Then integrate the X, Y data and store alGet a specific data label from the file.l variables in the object. 
.PP
\fBWarning:\fP
.RS 4
Does not handle Windows-format line breaks.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIfile_obj\fP File descriptor for the JCAMP file.
.PP
.nf
Parse a string of JCAMP file data and extract all needed data.
.fi
.PP
 
.RE
.PP

.PP
Definition at line 99 of file backend.py.
.SH "Member Data Documentation"
.PP 
.SS "\fBchemical_name\fP"
.PP
Definition at line 152 of file backend.py.
.SS "tuple \fBchemical_name\fP = db.StringProperty()\fC [static]\fP"
.PP
The chemical name associated with the spectrum. 
.PP
Definition at line 84 of file backend.py.
.SS "\fBchemical_type\fP"
.PP
Definition at line 150 of file backend.py.
.SS "tuple \fBchemical_type\fP = db.StringProperty()\fC [static]\fP"
.PP
The chemical type of the substance the spectrum represents. 
.PP
Definition at line 87 of file backend.py.
.SS "\fBcontents\fP"
.PP
Definition at line 101 of file backend.py.
.SS "\fBdata\fP"
.PP
Definition at line 125 of file backend.py.
.SS "tuple \fBdata\fP = db.ListProperty(float)\fC [static]\fP"
.PP
A list of integrated X,Y points for the spectrum's graph. 
.PP
Definition at line 90 of file backend.py.
.SS "\fBtype\fP"
.PP
Definition at line 102 of file backend.py.
.SS "\fBxy\fP"
.PP
Definition at line 107 of file backend.py.

.SH "Author"
.PP 
Generated automatically by Doxygen for RedHen from the source code.
