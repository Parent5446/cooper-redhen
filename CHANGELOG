2010-07-02  Tyler Romeo  <tylerromeo@gmail.com>
	Moved applications files into redhen module.
	* backend.py: Created draft of the spectrum class.

2010-07-03  James Stevenson  <jminuse@gmail.com>
	Moved applications files back into trunk, and deleted some empty/unused files. I'd prefer not to create subfolders until absolutely necessary, and to strictly limit the number of code files, to leave the project more manageable (the defunct project which proceded this one was useless largely due to proliferation of files).
	Corrected some syntax errors in backend.py. Good work with the database handling.
	Added HTML templates to main - this should be useful later to frontend.

2010-07-03  Tyler Romeo  <tylerromeo@gmail.com>
	* backend.py (Spectrum, Spectrum.parse_string, Spectrum.parse_file): Added docstrings.
	Altered method names to match Python style guide recommendations.
	
	* backend.py (Spectrum.find_peaks): New function.

2010-07-04  James Stevenson  <jminuse@gmail.com>
	Added code to use memcache and clarified how the searches will be structured.
	Keeping hashtables, etc in the datastore seems problematic - we may have to regenerate them from the data each time memcache is wiped (which shouldn't be too often).
	We hold these truths to be self-evident: that all floats are created equal, and that they are endowed by their creator with four inalienable bytes.
	Happy Independence Day!

2010-07-05  Tyler Romeo  <tylerromeo@gmail.com>
	* backend.py (Peak): New class, data model for the peak table.
	* backend.py (Spectrum): Renamed function find_peaks to _calculate_peaks.
	* backend.py (Spectrum.find_peaks): New function that checks Data Store and memcached before calculating peaks.
	* backend.py (search): Function now calculates peak table from Data Store if it does not exist.
	Spectrum class now checks Data Store and memcached before calculating its own peaks.
	
2010-07-05  James Stevenson  <jminuse@gmail.com>
	* Changed 'main.py' to 'frontend.py' so as to better represent division of labor.
	* Changed app.yaml to route requests to frontend.py.

2010-07-06  Tyler Romeo  <tylerromeo@gmail.com>
    * backend.py (Spectrum._calculate_integrals): New function to integrate data.
	* backend.py (Spectrum.find_integrals): New function to find integrated data, or calculate it if it does not exist.
	Spectrum class can now find and calculate its xydata_integrated variable.

2010-07-07  Tyler Romeo  <tylerromeo@gmail.com>
	* backend.py (search): Added code to create the user's spectrum object.
	* backend.py (find_heavyside): New function to find heavyside index.
	* backend.py (_calculate_heavyside): New function to calculate the heavyside index for the spectrum.
	Added heavyside function to the Spectrum class.
	
	* backend.py (DictProperty): New class from Google's db.Property to handle Dictionary properties.
	* backend.py (Matcher): New class to store dictionaries from matching algorithms.
	* backend.py (find_peaks): Changed function to use new Matcher class instead of deprecated Peaks class.
	Moved Peaks class into a dictionary in the Matcher class along with other dictionaries.

	TODO:
	* Parse the XY data in backend.Spectrum.parseString.
	* Handle multiple XY datasets according to JCAMP file standards.
	* Functions to integrate and differentiate XY data.
	* Functions to find peaks, etc. from XY data.
	* Data structures which store spectra's database keys and vote on them.
